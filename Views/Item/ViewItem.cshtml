@model Item
@{
	string itemName = Model.Name;
	ViewData["Title"] = itemName;

	bool userHasReviewes = ViewBag.UserHasReviewes ?? false;
	int reviewId = ViewBag.ReviewId ?? 0;
	bool isInWishlist = ViewBag.IsInWishlist ?? false;
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

</head>
<body>
	<!--Main info about item -->
	<div class="container mt-5">
		<div class="card shadow-lg border-0 rounded-4">
			<div class="row g-0">
				<div class="col-md-5">
					<img src="@Model.ImageUrl" class="img-fluid rounded-start" alt="@Model.Name">
				</div>
				<div class="col-md-7">
					<div class="card-body">
						<h2 class="card-title text-primary">@Model.Name</h2>
						<h5 class="text-muted mb-3">@Model.Category</h5>
						<p class="card-text">@Model.Description</p>
						<h4 class="text-success fw-bold">Price: $@Model.Price</h4>

						<div class="mt-4 d-flex gap-2">
							<button class="btn btn-outline-success btn-add-to-cart" data-id="@Model.Id">
								<i class="bi bi-cart-plus"></i> Add to Cart
							</button>
							@if (!isInWishlist) 
							{
								<form asp-controller="Wishlist" asp-action="Add" method="post">
									@Html.AntiForgeryToken()
									<input type="hidden" name="itemId" value="@Model.Id" />
									<button type="submit" class="btn btn-outline-secondary">
										<i class="bi bi-bookmark-plus"></i> Add to Wishlist
									</button>
								</form>
							}
							else
							{
								<a asp-controller="Wishlist" asp-action="Index" 
									class="btn btn-outline-secondary">
									<i class="bi bi-bookmark-fill"></i>
								</a>
							}
							
							<a asp-controller="Item" asp-action="Index" class="btn btn-secondary">← Back to Shop</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- review submission form -->
	<div class="card mt-4 shadow-sm">
		<div class="card-body">
			<h4 class="card-title">Add Your Review</h4>
			@if (User.Identity.IsAuthenticated)
			{
				@if(userHasReviewes)
				{
					<p class="text text-capitalize">You already have reviewed this items!</p>
				}
				else
				{
					@Html.AntiForgeryToken()
					<form id="reviewForm">
						<input type="hidden" name="itemId" value="@Model.Id" />
						<div class="mb-3">
							<label class="form-label">Rating:</label>
							<div class="star-rating">
								@for (int i = 1; i <= 5; i++)
								{
									<input type="radio" name="rating" id="star-@i" value="@i" required />
									<label for="star-@i" class="bi bi-star-fill mx-1"></label>
								}
							</div>
						</div>
						<div class="mb-3">
							<label for="comment" class="form-label">Comment (optional):</label>
							<textarea class="form-control" id="comment" name="comment" rows="4"></textarea>
						</div>
						<button type="submit" class="btn btn-primary">Submit Review</button>
					</form>
				}
				
			}
			else
			{
				<p>Please <a asp-area="Identity" asp-page="/Account/Login">log in</a> to submit a review.</p>
			}
		</div>
	</div>

	<!-- Display existing reviews -->
	<div class="card mt-4 shadow-sm">
		<div class="card-body">
			<h4 class="card-title">Reviews</h4>
			@if (Model.Reviews.Count > 0)
			{
				foreach (var review in Model.Reviews)
				{
					<div class="review mb-3 p-3 border rounded" id="review-@review.Id">
						<div class="d-flex justify-content-between">
							<span><strong>User:</strong> @(review.UserEmail)</span>
							<span><strong>Rating:</strong> @string.Concat(Enumerable.Repeat("★", (int)review.Rating))</span>
						</div>
						@if (!string.IsNullOrEmpty(review.Comment))
						{
							<p class="mt-2"><strong>Comment:</strong> @review.Comment</p>
						}
						<small class="text-muted">Posted on: @review.CreatingDate.ToString("g")</small>
						@if (reviewId != 0 && review.Id == reviewId)
						{
							<a href="#" data-review-id="@review.Id"
							   class="btn btn-sm btn-danger btn-delete-review"><i class="bi bi-trash"></i>
						   </a>
							<a class="btn btn-sm btn-secondary" asp-controller="Review" asp-action="Edit"
							   asp-route-reviewId="@review.Id">
								<i class="bi bi-pencil-square"></i>
							</a>
						}
					</div>
				}
			}
			else
			{
				<p>No reviews yet. Be the first to leave a review!</p>
			}
		</div>
	</div>
	@section Scripts {
		<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
		<script>
			$(document).ready(function () {
				//star rating interaction
				$('.star-rating label').hover(
					function () {
						$(this).addClass('selected');
						$(this).prevAll('.bi-star-fill').addClass('selected');
					},
					function () {
						$('.star-rating .bi-star-fill').removeClass('selected');
						$('.star-rating input:checked').next('.bi-star-fill').addClass('selected');
						$('.star-rating input:checked').next('.bi-star-fill').prevAll('.bi-star-fill').addClass('selected');
					}
				);

				$('.star-rating input').change(function () {
					$('.star-rating .bi-star-fill').removeClass('selected');
					$(this).next('.bi-star-fill').addClass('selected');
					$(this).next('.bi-star-fill').prevAll('.bi-star-fill').addClass('selected');
				});

				// AJAX for review submission
				$('#reviewForm').submit(function (e) {
					e.preventDefault();
					var formData = $(this).serialize();
					var token = $("input[name='__RequestVerificationToken']").val();

					$.ajax({
						url: '/Item/AddReview',
						type: 'POST',
						data: formData,
						headers: {
							RequestVerificationToken: token
						},
						success: function (response) {
							if (response.success) {
								//alert(response.message);
								location.reload(); // Reload to show new review
							} else {
								alert(response.message);
							}
						},
						error: function (xhr) {
							alert("An error occurred: " + xhr.statusText);
						}
					});
				});

				// AJAX for Add to Cart 
				$(".btn-add-to-cart").click(function (e) {
					e.preventDefault();
					var itemId = $(this).data("id");
					var token = $("input[name='__RequestVerificationToken']").val();

					$.ajax({
						url: '/Item/Buy',
						type: 'POST',
						data: { itemId: itemId },
						headers: {
							RequestVerificationToken: token
						},
						success: function (response) {
							
						},
						error: function (xhr) {
							alert("An error occurred: " + xhr.statusText);
						}
					});
				});

				$(".btn-delete-review").click(function (e) {
					e.preventDefault();
					var $button = $(this);
					var reviewId = $button.data("review-id");
					var token = $("input[name='__RequestVerificationToken']").val();

					if (confirm("Are you sure you want to delete this review?")) {
						$button.prop("disabled", true);
						$.ajax({
							url: '/Review/Delete/' + reviewId,
							type: 'DELETE',
							data: { reviewId: reviewId },
							headers: {
								RequestVerificationToken: token
							},
							success: function (response) {
								if (response.success) {
									$("#review-" + reviewId).remove();
									
								} else {
									alert(response.message);
								}
							},
							error: function (xhr) {
								alert("An error occurred: " + xhr.statusText);
							},
							complete: function () {
								$button.prop("disabled", false);
							}
						});
					}
				});
		});
		
		</script>
	}
</body>
</html>
